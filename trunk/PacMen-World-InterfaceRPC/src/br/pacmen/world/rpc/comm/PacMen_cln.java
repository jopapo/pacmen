package br.pacmen.world.rpc.comm;

//Generated by Netbula JRPCGEN V2.5.6.
//Netbula JavaRPC demo, expires after a fixed date!



import netbula.ORPC.*;

public class PacMen_cln extends ClientGeneric implements PacMen{

	/**
	Construct an RPC client that is not bound to any server
	*/
	public PacMen_cln() throws rpc_err { };

	/**
	Construct an RPC client object connected to a server
	on the specified host with the specified protocol

	@param host server hostname, or URL of the RPC proxy if http is used
	@param proto protocol, can be "tcp", "udp" or "http"
	*/
	public PacMen_cln(String host, String proto) throws rpc_err {
		super(host, PacMen._def_pno, PacMen._def_vno, proto);
	}


	/**
	Construct an RPC client object connected to a server
	on the specified host with the specified protocol and port number

	@param host server hostname
	@param proto protocol, can be "tcp" or "udp"
	@param port server's fixed port number
	*/
	public PacMen_cln(String host, String proto, int port) throws rpc_err {
		super(host, proto, port, PacMen._def_pno, PacMen._def_vno);
	}


	/**
	Construct an RPC client object connected to a server
	on the specified host with the specified program number,version and protocol

	@param host server hostname, or URL of RPC proxy
	@param proto protocol, can be "tcp", "udp" or "http"
	@param prog server's program number
	@param ver server's version number
	*/
	public PacMen_cln(String host,  int prog, int ver, String proto) throws rpc_err {
		super(host, prog, ver, proto);
	}

	public st_World worldInfo() throws rpc_err {
		XDTvoid _in_arg = new XDTvoid();
		st_World _out_arg = new st_World();
		getClient().call(PacMen._worldInfo_proc, _in_arg, _out_arg);
		return _out_arg;
	}

	public st_Status pacManInfo(st_Actor in_arg) throws rpc_err {
		st_Status _out_arg = new st_Status();
		getClient().call(PacMen._pacManInfo_proc, in_arg, _out_arg);
		return _out_arg;
	}

	public st_ActorAndNext ghostInfo(short in_arg) throws rpc_err {
		XDTshort _in_arg = new XDTshort();
		_in_arg.value = in_arg;
		st_ActorAndNext _out_arg = new st_ActorAndNext();
		getClient().call(PacMen._ghostInfo_proc, _in_arg, _out_arg);
		return _out_arg;
	}


}

